name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]  # develop 브랜치에 push가 일어날 때 실행
  pull_request:
    branches: [ develop ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 저장소 코드 체크아웃
      - uses: actions/checkout@v3

      # JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      # application.yml 파일 생성
      - name: Make application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION_YML }}" > ./application.yml
        shell: bash

      # Gradle로 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # Docker 이미지 빌드 및 푸시
      - name: Docker build & push to Docker Hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/chungbazi_be .
          docker push ${{ secrets.DOCKER_REPO }}/chungbazi_be

      # 서버에 배포
      - name: Deploy to server with Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker-compose down
            sudo docker pull ${{ secrets.DOCKER_REPO }}/chungbazi_be
            sudo docker-compose -f docker-compose.yml up -d
            sudo docker image prune -f